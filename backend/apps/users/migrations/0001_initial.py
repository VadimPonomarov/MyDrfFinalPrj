# Generated by Django 4.2.7 on 2023-11-19 23:33

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client_type', models.CharField(choices=[('BUYER', 'BUYER'), ('SELLER', 'SELLER')], default='SELLER', max_length=255)),
                ('account_type', models.CharField(choices=[('BASE', 'BASE'), ('PREMIUM', 'PREMIUM')], default='BASE', max_length=255)),
            ],
            options={
                'db_table': 'accounts',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator])),
                ('password', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{6,}$', 'Check if the password has a minimum of 6 characters, at least 1 uppercase letter, 1 lowercase letter, and 1 number with no spaces.')])),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('account', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to='auth_users.accountmodel')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'ordering': ['id', 'email'],
            },
        ),
    ]
